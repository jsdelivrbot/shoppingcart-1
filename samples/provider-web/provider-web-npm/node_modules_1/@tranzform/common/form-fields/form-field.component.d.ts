import { AfterContentInit, OnInit, OnChanges, SimpleChanges } from '@angular/core';
import { NgModel } from '@angular/forms';
import { ValidationMessage } from './validation-message.model';
/**
 * Provide layout for base and custom form fields.
 */
export declare class FormFieldComponent implements AfterContentInit, OnInit, OnChanges {
    /**
     * A child popover, if any.
     */
    private popover;
    /**
     * A child popover, if any.
     */
    private childField;
    /**
     * An ID for the form field container.
     */
    id: string;
    /**
     * Text to use for field label.
     * @deprecated
     */
    text: string;
    /**
     * Field label.
     */
    label: string;
    /**
     * ID of the element this is labeling.
     */
    labelFor: string;
    /**
     * Hint text to show under the label.
     */
    hint: string;
    /**
     * Additional info is available to be viewed. There should be an element with the "info" attribute in the content of this.
     */
    hasInfo: boolean;
    /**
     * The name of the field to be used for validation.
     */
    validation: NgModel;
    /**
     * Messages to be shown when validation errors are present.
     */
    validationMessages: ValidationMessage[];
    /**
     * Make this field appear disabled.
     */
    disabled: boolean;
    /**
     * Use the full width layout. This is initialized by the FormFieldsComponent parent.
     */
    fullWidth: boolean;
    /**
     * Display the info box.
     */
    private showInfo;
    /**
     * Use the short layout. This is initialized by the FormFieldsComponent parent.
     */
    short: boolean;
    ngOnInit(): void;
    /**
     * Forward the text label to a child popover if there is one.
     */
    ngAfterContentInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
}
