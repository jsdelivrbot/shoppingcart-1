import { HostBinding, HostListener } from '@angular/core';
/**
 * Common functionality for Clinical and Engage shells.
 */
var BaseShell = (function () {
    function BaseShell() {
        var _this = this;
        this.focusByKeyboard = true;
        document.addEventListener('focus', function () { return _this.focus(); }, true);
    }
    BaseShell.prototype.keydown = function () {
        this.focusByKeyboard = true;
    };
    BaseShell.prototype.mousedown = function () {
        this.focusByKeyboard = false;
    };
    // @HostListener('document:focus')
    BaseShell.prototype.focus = function () {
        this.updateVisibility();
    };
    BaseShell.prototype.focusout = function () {
        var _this = this;
        window.setTimeout(function () {
            if (!document.hasFocus()) {
                _this.focusByKeyboard = true;
                _this.updateVisibility();
            }
        });
    };
    BaseShell.prototype.updateVisibility = function () {
        this.hideFocusOutline = !this.focusByKeyboard;
    };
    BaseShell.propDecorators = {
        'hideFocusOutline': [{ type: HostBinding, args: ['class.focus-outline-hidden',] },],
        'keydown': [{ type: HostListener, args: ['document:keydown',] },],
        'mousedown': [{ type: HostListener, args: ['document:mousedown',] },],
        'focusout': [{ type: HostListener, args: ['document:focusout',] },],
    };
    return BaseShell;
}());
export { BaseShell };
//# sourceMappingURL=shell.base.js.map