import { Component, Input } from '@angular/core';
import { Router, NavigationEnd } from '@angular/router';
import 'rxjs/add/operator/filter';
import { TranslateService } from '@ngx-translate/core';
var HeaderAndCrumbsComponent = (function () {
    /**
     * Update page title, header, and breadcrumbs when route is activated.
     */
    function HeaderAndCrumbsComponent(router, translate) {
        var _this = this;
        this.translate = translate;
        this.appTitle = document.title;
        router.events
            .filter(function (event) { return event instanceof NavigationEnd; })
            .subscribe(function () {
            // Wait a tick for ParentRouteContentComponent to set dynamic data
            setTimeout(function () {
                var crumbs = _this.crumbs = [];
                var crumbParams = _this.crumbParams = [];
                var path = [];
                var dataFromParent;
                _this.routeTitle = undefined;
                // Traverse to current route from root
                var route = router.routerState.snapshot.root;
                var data;
                while (route.firstChild) {
                    route = route.firstChild;
                    data = route.data;
                    if (!data.title) {
                        dataFromParent = data._childData;
                        continue;
                    }
                    if (route.url.length) {
                        path = path.concat([route.url[0].path]);
                    }
                    else {
                        dataFromParent = data._childData;
                        continue;
                    }
                    // If route has a title, add a breadcrumb for it
                    if (data.title) {
                        _this.routeTitle = data.title;
                        _this.titleParams = dataFromParent;
                        crumbs.push({
                            path: path,
                            // Skip location change unless it is explicitly asked for
                            skipLocationChange: !(data.skipLocationChange === false),
                            text: data.title,
                        });
                        crumbParams.push(dataFromParent);
                    }
                    dataFromParent = data._childData;
                }
                if (crumbs.length === 1) {
                    _this.crumbs = [];
                }
                // If crumbs are defined in route, override automatic ones
                if (data && data.crumbs) {
                    _this.crumbs = data.crumbs;
                }
                crumbs = _this.crumbs;
                if (_this.simpleCrumb && crumbs.length) {
                    // data.crumbs may contain single crumb so handle that
                    var singleCrumbIndex = Math.max(0, crumbs.length - 2);
                    _this.singleCrumb = crumbs[singleCrumbIndex];
                    _this.singleCrumbParams = crumbParams[singleCrumbIndex];
                }
                else {
                    _this.singleCrumb = undefined;
                }
                // Set the document title to the deepest title found
                if (_this.routeTitle) {
                    _this.translate.get(_this.routeTitle, _this.titleParams).subscribe(function (translated) {
                        document.title = _this.appTitle + ' - ' + translated;
                    });
                }
                else {
                    document.title = _this.appTitle;
                }
            });
        });
    }
    HeaderAndCrumbsComponent.decorators = [
        { type: Component, args: [{
                    selector: 'tzf-header-and-crumbs',
                    template: "<nav *ngIf=\"singleCrumb || (crumbs && crumbs.length)\"> <ol *ngIf=\"!singleCrumb\" id=\"crumbs\" > <li *ngFor=\"let crumb of crumbs, let i = index, let last = last\" class=\"crumb\" > <ng-container *ngIf=\"i === 0 || !last\"> <a *ngIf=\"crumb.path\" class=\"crumbLink\" [skipLocationChange]=\"crumb.skipLocationChange\" [routerLink]=\"crumb.path\" >{{ crumb.text | translate:crumbParams[i] }}</a ><a *ngIf=\"crumb.url\" class=\"crumbLink\" [href]=\"crumb.url\" >{{ crumb.text | translate:crumbParams[i] }}</a ></ng-container >{{ i === 0 || !last ? '' : crumb.text | translate:crumbParams[i] }}</li> </ol> <ng-container *ngIf=\"singleCrumb\"> <a *ngIf=\"singleCrumb.path\" id=\"simple-crumb\" [routerLink]=\"singleCrumb.path\" >{{ singleCrumb.text | translate:singleCrumbParams }}</a> <a *ngIf=\"singleCrumb.url\" id=\"simple-crumb\" [href]=\"singleCrumb.url\" >{{ singleCrumb.text | translate:singleCrumbParams }}</a> </ng-container> </nav> <h1 *ngIf=\"routeTitle\" translate [translateParams]=\"titleParams\" >{{ routeTitle }}</h1> ",
                    styles: [""]
                },] },
    ];
    /** @nocollapse */
    HeaderAndCrumbsComponent.ctorParameters = function () { return [
        { type: Router, },
        { type: TranslateService, },
    ]; };
    HeaderAndCrumbsComponent.propDecorators = {
        'simpleCrumb': [{ type: Input },],
    };
    return HeaderAndCrumbsComponent;
}());
export { HeaderAndCrumbsComponent };
//# sourceMappingURL=header-and-crumbs.component.js.map