import { Component, Input, HostBinding } from '@angular/core';
/**
 * Mask an element while content is being loaded.
 *
 * @example
 * <div [tzfLoading]="loading">
 *   My content.
 * </div>
 *
 * @example
 * private loading: boolean;
 *
 * loadContent () {
 *   this.client.load()
 *     .finally(() => this.loading = false)
 *     .subscribe(response => {
 *       // Handle response
 *     });
 *
 *   this.loading = true;
 * }
 */
var LoadingComponent = (function () {
    function LoadingComponent() {
    }
    LoadingComponent.decorators = [
        { type: Component, args: [{
                    selector: '[tzfLoading]',
                    template: "<ng-content></ng-content> <div class=\"loading-mask\"> <div class=\"ring outer\"> <div class=\"ring middle\"> <div class=\"ring inner\"></div> </div> </div> </div> ",
                    styles: ["@keyframes a{0%{transform:rotate(0deg)}to{transform:rotate(1turn)}}:host(.loading){position:relative}:host(.loading) .loading-mask{height:100%;left:0;position:absolute;text-align:center;top:0;width:100%;cursor:wait}:host(.loading) .loading-mask .ring{display:inline-block;padding:10px;position:relative}:host(.loading) .loading-mask .ring:after,:host(.loading) .loading-mask .ring:before{content:'';border:4px solid;border-radius:100%;display:block;height:100%;left:0;position:absolute;top:0;width:100%}:host(.loading) .loading-mask .ring:after{transform:rotate(150deg)}:host(.loading) .loading-mask .inner:after,:host(.loading) .loading-mask .inner:before,:host(.loading) .loading-mask .middle:after,:host(.loading) .loading-mask .middle:before,:host(.loading) .loading-mask .outer:after,:host(.loading) .loading-mask .outer:before{border-color:currentColor currentColor transparent transparent}:host(.loading) .loading-mask .outer{animation:1s linear infinite a;margin:-35px 0 0 -35px;position:absolute;left:50%;top:50%}:host(.loading) .loading-mask .middle{animation:.5s linear infinite reverse a;width:50px;height:50px}:host(.loading) .loading-mask .inner{animation:.5s linear infinite a;height:30px;width:30px}:host(.loading) .loading-mask .inner:after{transform:rotate(-150deg)}"]
                },] },
    ];
    /** @nocollapse */
    LoadingComponent.ctorParameters = function () { return []; };
    LoadingComponent.propDecorators = {
        'loading': [{ type: HostBinding, args: ['class.loading',] }, { type: Input, args: ['tzfLoading',] },],
    };
    return LoadingComponent;
}());
export { LoadingComponent };
//# sourceMappingURL=loading.component.js.map