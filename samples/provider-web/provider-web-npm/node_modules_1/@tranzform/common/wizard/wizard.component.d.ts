import { AfterContentInit } from '@angular/core';
import { DomSanitizer, SafeUrl } from '@angular/platform-browser';
import { Subscription } from 'rxjs/Subscription';
import 'rxjs/add/operator/finally';
import { WizardStepComponent } from './wizard-step/wizard-step.component';
export interface PrepareEvent {
    wait(Observable: any): any;
}
export interface CompleteEvent {
    wait(Observable: any): any;
}
/**
 * Present the user with a series of steps that must be completed in order.
 */
export declare class WizardComponent implements AfterContentInit {
    private sanitizer;
    /**
     * ID of the wizard.
     */
    id: string;
    /**
     * Text in the navigation strip will be hidden when the screen is narrower than this.
     */
    responsiveWidth: number;
    private wizardNav;
    /**
     * Find all of the steps defined for this wizard.
     */
    private stepQuery;
    /**
     * Add the class to hide titles.
     */
    private hideTitles;
    /**
     * The current step.
     */
    private activeIndex;
    /**
     * The wizard steps.
     */
    steps: WizardStepComponent[];
    waiting: Subscription;
    constructor(sanitizer: DomSanitizer);
    /**
     * Initialize the steps and responsive width.
     */
    ngAfterContentInit(): void;
    /**
     * Navigate back to a previously completed step.
     * @param state The history state to navigate to.
     */
    back(state: any): void;
    /**
     * Generate the link to return to a step, marking the URL as safe.
     * @param index The step to generate this for.
     */
    backLink(index: number): SafeUrl;
    /**
     * Move to the next step.
     */
    next(): void;
    tryAdvanceStep(): void;
    advanceStep(): void;
    /**
     * Respond to a change in window size.
     */
    checkSize(): void;
}
