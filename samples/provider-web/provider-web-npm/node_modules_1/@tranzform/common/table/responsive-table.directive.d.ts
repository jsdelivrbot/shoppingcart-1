import { EventEmitter, ElementRef, QueryList, AfterViewInit } from '@angular/core';
import { Column } from 'primeng/components/common/shared';
import { ResponsiveColumnDirective } from './responsive-column.directive';
/**
 * Provide responsive functionality for data tables where columns will be moved
 * to the expandable area when there isn't enough room to fit them all.
 *
 * @example
 * <p-dataTable
 *   [value]="data"
 *   [expandableRows]="true"
 *   (responsiveColumns)="columns = $event"
 *   [responsiveExpander]="true"
 * >
 *   <p-column expander="true" styleClass="expander"></p-column>
 *   <p-column field="field1" header="Field 1" [responsiveMinWidth]="50"></p-column>
 *   ... more columns ...
 *   <ng-template pTemplate="rowexpansion" let-row>
 *     <tzf-responsive-columns
 *       [row]="row"
 *       [columns]="columns"
 *     ></tzf-responsive-columns>
 *     ... additional expandable content if desired ...
 *   </ng-template>
 * </p-dataTable>
 */
export declare class ResponsiveTableDirective implements AfterViewInit {
    private elRef;
    /**
     * Only show the expander column when one or more columns is displayed there. Set to true if there is no other expandable content.
     */
    responsiveExpander: boolean;
    /**
     * Provide the responsive columns to be bound to tzf-responsive-columns.
     */
    responsiveColumns: EventEmitter<Column[]>;
    /**
     * All of the data table columns.
     */
    columnQuery: QueryList<Column>;
    /**
     * All of the columns with a minimum width set. This should include all columns except the expander.
     */
    responsiveColumnQuery: QueryList<ResponsiveColumnDirective>;
    /**
     * The number of columns that should be visible. The others will be hidden by styles based on this value.
     */
    private visibleColumns;
    /**
     * Column widths defined by the ResponsiveColumnDirective.
     */
    private columnWidths;
    constructor(elRef: ElementRef);
    /**
     * Emit columns, save the column widths, and find the columns that should be visible right away.
     */
    ngAfterViewInit(): void;
    /**
     * Calculate how many columns can be shown while maintaining minimum column widths.
     */
    private updateVisible();
}
