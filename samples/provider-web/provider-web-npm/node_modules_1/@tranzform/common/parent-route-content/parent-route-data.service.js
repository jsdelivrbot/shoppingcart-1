import { Injectable } from '@angular/core';
import { Subject } from 'rxjs/Subject';
/**
 * Enable simple data passing between parent routes and their children.
 */
var ParentRouteDataService = (function () {
    function ParentRouteDataService() {
        this.subjectsByParentId = {};
    }
    /**
     * Register a parent route. TO BE USED BY ParentRouteContentComponent ONLY!
     * @param parentId ID of the parent route content.
     */
    ParentRouteDataService.prototype.registerParent = function (parentId) {
        var subjects = this.subjectsByParentId[parentId];
        if (subjects) {
            throw new Error('Parent is already registered! (' + parentId + ')');
        }
        subjects = this.subjectsByParentId[parentId] = {
            toChild: new Subject(),
            toParent: new Subject(),
        };
        return {
            fromChild: subjects.toParent,
            toChild: subjects.toChild,
        };
    };
    /**
     * Unregister a parent route. TO BE USED BY ParentRouteContentComponent ONLY!
     * @param parentId ID of the parent route content.
     */
    ParentRouteDataService.prototype.unregisterParent = function (parentId) {
        var subjects = this.subjectsByParentId;
        var subject = subjects[parentId];
        if (!subject) {
            throw new Error('Parent is not registered: ' + parentId);
        }
        subject.toChild.complete();
        subject.toParent.complete();
        delete subjects[parentId];
    };
    /**
     * Get an observable to receive data from a parent route.
     * @param parentId ID of the parent route content.
     */
    ParentRouteDataService.prototype.observableFor = function (parentId) {
        var subjects = this.subjectsByParentId[parentId];
        if (!subjects) {
            throw new Error('Parent not found: ' + parentId);
        }
        return subjects.toChild;
    };
    /**
     * Send data to a parent route.
     * @param parentId ID of the parent route content.
     * @param data Data to send.
     */
    ParentRouteDataService.prototype.send = function (parentId, data) {
        var subjects = this.subjectsByParentId[parentId];
        if (!subjects) {
            throw new Error('Parent not found: ' + parentId);
        }
        subjects.toParent.next(data);
    };
    ParentRouteDataService.decorators = [
        { type: Injectable },
    ];
    /** @nocollapse */
    ParentRouteDataService.ctorParameters = function () { return []; };
    return ParentRouteDataService;
}());
export { ParentRouteDataService };
//# sourceMappingURL=parent-route-data.service.js.map