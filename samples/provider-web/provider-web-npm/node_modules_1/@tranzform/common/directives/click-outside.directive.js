import { Directive, Input, Output, EventEmitter, ElementRef, HostListener } from '@angular/core';
var ClickOutsideDirective = (function () {
    function ClickOutsideDirective(_element) {
        this._element = _element;
        this.enabled = true; // tslint:disable-line:no-input-rename
        this.clickOutside = new EventEmitter();
    }
    ClickOutsideDirective.prototype.onOutsideClick = function (target) {
        if (this.enabled !== false && !this._element.nativeElement.contains(target)) {
            if (this.ignoreOrphanTargetClicks) {
                for (; target !== document.body; target = target.parentNode) {
                    if (!target) {
                        return;
                    }
                }
            }
            this.clickOutside.emit();
        }
    };
    ClickOutsideDirective.decorators = [
        { type: Directive, args: [{
                    selector: '[tzfClickOutside]',
                },] },
    ];
    /** @nocollapse */
    ClickOutsideDirective.ctorParameters = function () { return [
        { type: ElementRef, },
    ]; };
    ClickOutsideDirective.propDecorators = {
        'enabled': [{ type: Input, args: ['tzfClickOutside',] },],
        'ignoreOrphanTargetClicks': [{ type: Input },],
        'clickOutside': [{ type: Output },],
        'onOutsideClick': [{ type: HostListener, args: ['document:click', ['$event.target'],] },],
    };
    return ClickOutsideDirective;
}());
export { ClickOutsideDirective };
//# sourceMappingURL=click-outside.directive.js.map