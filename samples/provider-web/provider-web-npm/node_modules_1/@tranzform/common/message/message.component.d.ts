import { OnChanges, SimpleChanges } from '@angular/core';
import { NgForm } from '@angular/forms';
/**
 * Display custom or validation messages.
 *
 * @example
 * <tzf-message message="An error occurred."></tzf-message>
 *
 * @example
 * <form #myForm="ngForm">
 *   <tzf-message
 *     form="myForm"
 *     validationMessages="valMsgs"
 *   ></tzf-message>
 *   <input type="text"
 *     [(ngModel)]="field1"
 *     name="field1"
 *     required
 *   >
 * </form>
 *
 * @example
 * validationMessages = {
 *   field1: {
 *     required: 'Field #1 is required.',
 *   },
 * };
 */
export declare class MessageComponent implements OnChanges {
    /**
     * Validation messages for the form controls. It is keyed by control name and references objects with messages keyed by validator.
     */
    validationMessages: {
        [key: string]: {
            [key: string]: string;
        };
    };
    /**
     * The form to show validation messages for.
     */
    form: NgForm;
    /**
     * Multiple messages to display.
     */
    messages: string[];
    /**
     * A single message to display.
     */
    message: string;
    /**
     * The message type.
     */
    type: 'error' | 'success';
    /**
     * Icons for the different message types.
     */
    private icons;
    _messages: string[];
    valMessages: string[];
    /**
     * When a form is set, add hooks to detect validation changes.
     */
    ngOnChanges(changes: SimpleChanges): void;
}
