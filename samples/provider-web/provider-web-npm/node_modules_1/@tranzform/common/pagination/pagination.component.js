import { Component, ChangeDetectionStrategy, Input, Output, EventEmitter, ViewChild } from '@angular/core';
import { NgbPagination } from '@ng-bootstrap/ng-bootstrap/pagination/pagination.module';
/**
 * A pagination bar.
 *
 * @example
 * <tzf-pagination
 *   [collectionSize]="results.length"
 *   [pageSize]="5"
 *   [(page)]="page"
 *   (pageChange)="onPageChange()"
 * >
 * </tzf-pagination>
 */
var PaginationComponent = (function () {
    function PaginationComponent() {
        /**
         * Page to display.
         */
        this.page = 1;
        /**
         * The page was changed. The event contains the new page number.
         */
        this.pageChange = new EventEmitter(true);
    }
    PaginationComponent.decorators = [
        { type: Component, args: [{
                    selector: 'tzf-pagination',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    template: "<nav> <ol class=\"outer-list\"> <li class=\"page-item left\"> <a href class=\"page-link\" (click)=\"!!ngb.selectPage(1)\" >First</a> </li ><li class=\"page-item left\"> <a href class=\"page-link\" (click)=\"!!ngb.selectPage(ngb.page-1)\" >Previous</a> </li ><li class=\"page-item\"> <ngb-pagination [collectionSize]=\"collectionSize\" [pageSize]=\"pageSize\" [(page)]=\"page\" (pageChange)=\"pageChange.emit($event)\" > </ngb-pagination> </li ><li class=\"page-item right\"> <a href class=\"page-link\" (click)=\"!!ngb.selectPage(ngb.page+1)\" >Next</a> </li ><li class=\"page-item right\"> <a href class=\"page-link\" (click)=\"!!ngb.selectPage(ngb.pageCount)\" >Last</a> </li> </ol> </nav> ",
                    styles: [":root{--side-padding:50px}@media (max-width:1000px){:root{--side-padding:5vw}}.outer-list{border:solid #e3e9eb;border-width:1px 0;margin:1em 0 0;padding:.8em 0;text-align:center}.outer-list ::ng-deep .page-item{display:inline-block}.outer-list ::ng-deep .page-link{color:#1f7c99;display:inline-block}.outer-list ::ng-deep .pagination{margin:0 .8em}.outer-list ::ng-deep .pagination .page-item{margin:0 .2em}.outer-list ::ng-deep .pagination .page-link{line-height:1.7em;min-width:1.7em;padding:0 .5em}.outer-list ::ng-deep .active .page-link{background:#00873f;border-radius:2px;color:#fff}.page-link{padding:0 1.3em}.left,.right{border:0 solid #e3e9eb;line-height:1em}.left{border-right-width:1px}.right{border-left-width:1px}"]
                },] },
    ];
    /** @nocollapse */
    PaginationComponent.ctorParameters = function () { return []; };
    PaginationComponent.propDecorators = {
        'collectionSize': [{ type: Input },],
        'pageSize': [{ type: Input },],
        'page': [{ type: Input },],
        'pageChange': [{ type: Output },],
        'ngb': [{ type: ViewChild, args: [NgbPagination,] },],
    };
    return PaginationComponent;
}());
export { PaginationComponent };
//# sourceMappingURL=pagination.component.js.map