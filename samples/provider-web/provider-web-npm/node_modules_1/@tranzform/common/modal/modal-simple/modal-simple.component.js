import { Component } from '@angular/core';
import { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap/modal/modal-ref';
/**
 * This component is not intended to be used directly. The ModalService uses it for Alert and Confirm modals.
 */
var ModalSimpleComponent = (function () {
    function ModalSimpleComponent(modal) {
        this.modal = modal;
        this.cancelText = '';
        if (document.body.className.indexOf('modal-open') >= 0) {
            document.body.className += ' two-modals';
        }
    }
    ModalSimpleComponent.prototype.ngOnDestroy = function () {
        var body = document.body;
        if (body.className.indexOf('two-modals') >= 0) {
            body.className = 'modal-open ' + body.className.replace(/ ?two-modals/, '');
        }
    };
    /**
     * The user clicked the Submit button.
     */
    ModalSimpleComponent.prototype.onSubmit = function () {
        this.modal.close();
    };
    /**
     * The user dismissed the modal.
     * @param reason Reason for dismissal.
     */
    ModalSimpleComponent.prototype.onDismiss = function (reason) {
        this.modal.dismiss(reason);
    };
    ModalSimpleComponent.decorators = [
        { type: Component, args: [{
                    template: "<tzf-modal-content [modal]=\"modal\" [headerText]=\"headerText\" [submitText]=\"okText\" [cancelText]=\"cancelText\" [cancelButton]=\"cancelText.length\" (submit)=\"onSubmit()\" (dismiss)=\"onDismiss($event)\" > <p main *ngFor=\"let m of messages\" translate>{{ m }}</p> </tzf-modal-content> ",
                    styles: ["::ng-deep body.two-modals .modal-backdrop{opacity:.5}"]
                },] },
    ];
    /** @nocollapse */
    ModalSimpleComponent.ctorParameters = function () { return [
        { type: NgbActiveModal, },
    ]; };
    return ModalSimpleComponent;
}());
export { ModalSimpleComponent };
//# sourceMappingURL=modal-simple.component.js.map