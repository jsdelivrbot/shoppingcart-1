import { Injectable } from '@angular/core';
import { NgbModal } from '@ng-bootstrap/ng-bootstrap/modal/modal';
import { ModalSimpleComponent } from './modal-simple/modal-simple.component';
/**
 * Boilerplate code for working with modals.
 */
var ModalService = (function () {
    function ModalService(modal) {
        this.modal = modal;
    }
    /**
     * Open a modal with a message and a single button.
     * @param params Text values.
     * @return A promise that resolves when the user closes the modal.
     */
    ModalService.prototype.alert = function (params) {
        var _this = this;
        return new Promise(function (resolve) {
            _this.confirm({
                message: params.message,
                headerText: params.headerText,
                okText: params.okText,
                cancelText: '',
            })
                .then(function () { return resolve(); }, function () { return resolve(); });
        });
    };
    /**
     * Open a modal with a message and ok/cancel buttons.
     * @param params Text values.
     * @return A promise that resolves when the user click the OK button or is rejected when they cancel or close it.
     */
    ModalService.prototype.confirm = function (params) {
        var modalRef = this.modal.open(ModalSimpleComponent);
        var modalCmp = modalRef.componentInstance;
        modalCmp.modal = modalRef;
        modalCmp.messages = Array.isArray(params.message) ? params.message : [params.message];
        modalCmp.headerText = params.headerText;
        modalCmp.okText = params.okText;
        modalCmp.cancelText = params.cancelText;
        return modalRef.result;
    };
    ModalService.decorators = [
        { type: Injectable },
    ];
    /** @nocollapse */
    ModalService.ctorParameters = function () { return [
        { type: NgbModal, },
    ]; };
    return ModalService;
}());
export { ModalService };
//# sourceMappingURL=modal.service.js.map