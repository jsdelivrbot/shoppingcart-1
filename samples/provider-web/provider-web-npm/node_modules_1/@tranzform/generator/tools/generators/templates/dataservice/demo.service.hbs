import { Injectable }              from '@angular/core';
import { Http, Response }          from '@angular/http';
import { Observable } from 'rxjs/Observable';
import { AppSettings } from './../../../app-settings'
import 'rxjs/add/operator/catch';
import 'rxjs/add/operator/map';
import 'rxjs/add/operator/toPromise';

@Injectable()
export class {{pascalCase servicename}}Service {
  private {{camelCase servicename}}Url = AppSettings.API_ENDPOINT +'{{path}}';  // URL to web API

  private {{camelCase modelname}}: {{pascalCase modelname}}
  constructor (private http: Http) {}
  get(): Promise<{{pascalCase modelname}}> {
    return this.http.get(this.{{camelCase servicename}}Url).toPromise()
                    .then(this.extractData)
                    .catch(this.handleError);
  }
  private extractData(res: Response) {
    let body = < {{pascalCase modelname}} >res.json();
    console.log(body);
    return body || { };
  }
   
   private handleError (error: Response | any) {
    // In a real world app, you might use a remote logging infrastructure
  let errMsg: string;
    if (error instanceof Response) {
      const body = error.json() || '';
      const err = body.error || JSON.stringify(body);
      errMsg = `${error.status} - ${error.statusText || ''} ${err}`;
    } else {
      errMsg = error.message ? error.message : error.toString();
    }
    console.error(errMsg);
    return Observable.throw(errMsg);
  } 
}

/** Create Your model  */
@Injectable()
export class {{pascalCase modelname}}{
     constructor(/** Define your model
    public id:Number,
    public firstname:String,
    public lastname:String,
    public age:String */) { }
}