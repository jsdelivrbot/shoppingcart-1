/**
 * TranZform MDM API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.00.004.000
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { Inject, Injectable, Optional } from '@angular/core';
import { Http, Headers, URLSearchParams } from '@angular/http';
import { RequestMethod, RequestOptions } from '@angular/http';
import 'rxjs/add/operator/map';
import { BASE_PATH } from '../variables';
import { Configuration } from '../configuration';
var MasterDataManagementApi = (function () {
    function MasterDataManagementApi(http, basePath, configuration) {
        this.http = http;
        this.basePath = 'https://127.0.0.1:8080';
        this.defaultHeaders = new Headers();
        this.configuration = new Configuration();
        if (basePath) {
            this.basePath = basePath;
        }
        if (configuration) {
            this.configuration = configuration;
        }
    }
    /**
    * Get Master Data Details
    * Get the list of master data details based on provided multiple categories and also based on language preference either en or es.
    * @param params Parameters.
    */
    MasterDataManagementApi.prototype.getCategories = function (params, extraHttpRequestParams) {
        return this.getCategoriesWithHttpInfo(params, extraHttpRequestParams)
            .map(function (response) {
            if (response.status === 204) {
                return undefined;
            }
            else {
                return response.json();
            }
        });
    };
    /**
    * Validate Category Codes
    * Validate the code provided for each category.
    * @param params Parameters.
    */
    MasterDataManagementApi.prototype.validateMasterData = function (params, extraHttpRequestParams) {
        return this.validateMasterDataWithHttpInfo(params, extraHttpRequestParams)
            .map(function (response) {
            if (response.status === 204) {
                return undefined;
            }
            else {
                return response.json();
            }
        });
    };
    /**
     * Get Master Data Details
     * Get the list of master data details based on provided multiple categories and also based on language preference either en or es.
     * @param params.category Provide the single category or multiple categories(comma seperated).
     */
    MasterDataManagementApi.prototype.getCategoriesWithHttpInfo = function (params, extraHttpRequestParams) {
        var path = this.basePath + '/mdm/data/categories';
        var queryParameters = new URLSearchParams();
        var headers = new Headers(this.defaultHeaders.toJSON()); // https://github.com/angular/angular/issues/6845
        // verify required parameter 'params.category' is not null or undefined
        if (params.category === null || params.category === undefined) {
            throw new Error('Required parameter params.category was null or undefined when calling getCategories.');
        }
        if (params.category !== undefined) {
            queryParameters.set('category', params.category);
        }
        // to determine the Content-Type header
        var consumes = [
            'application/json'
        ];
        // to determine the Accept header
        var produces = [
            'application/json'
        ];
        var requestOptions = new RequestOptions({
            method: RequestMethod.Get,
            headers: headers,
            search: queryParameters
        });
        // https://github.com/swagger-api/swagger-codegen/issues/4037
        if (extraHttpRequestParams) {
            requestOptions = Object.assign(requestOptions, extraHttpRequestParams);
        }
        return this.http.request(path, requestOptions);
    };
    /**
     * Validate Category Codes
     * Validate the code provided for each category.
     * @param params.body
     */
    MasterDataManagementApi.prototype.validateMasterDataWithHttpInfo = function (params, extraHttpRequestParams) {
        var path = this.basePath + '/mdm/data/validate';
        var queryParameters = new URLSearchParams();
        var headers = new Headers(this.defaultHeaders.toJSON()); // https://github.com/angular/angular/issues/6845
        // verify required parameter 'params.body' is not null or undefined
        if (params.body === null || params.body === undefined) {
            throw new Error('Required parameter params.body was null or undefined when calling validateMasterData.');
        }
        // to determine the Content-Type header
        var consumes = [
            'application/json'
        ];
        // to determine the Accept header
        var produces = [
            'application/json'
        ];
        headers.set('Content-Type', 'application/json');
        var requestOptions = new RequestOptions({
            method: RequestMethod.Post,
            headers: headers,
            body: params.body == null ? '' : JSON.stringify(params.body),
            search: queryParameters
        });
        // https://github.com/swagger-api/swagger-codegen/issues/4037
        if (extraHttpRequestParams) {
            requestOptions = Object.assign(requestOptions, extraHttpRequestParams);
        }
        return this.http.request(path, requestOptions);
    };
    return MasterDataManagementApi;
}());
export { MasterDataManagementApi };
MasterDataManagementApi.decorators = [
    { type: Injectable },
];
/** @nocollapse */
MasterDataManagementApi.ctorParameters = function () { return [
    { type: Http, },
    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [BASE_PATH,] },] },
    { type: Configuration, decorators: [{ type: Optional },] },
]; };
//# sourceMappingURL=MasterDataManagementApi.js.map